<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.glowroot</groupId>
    <artifactId>glowroot-parent</artifactId>
    <version>0.5-SNAPSHOT</version>
  </parent>

  <artifactId>glowroot-core</artifactId>

  <name>Glowroot Core</name>
  <description>Glowroot Core</description>

  <properties>
    <maven.build.timestamp.format>yyyy-MM-dd HH:mm:ss Z</maven.build.timestamp.format>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.glowroot</groupId>
      <artifactId>glowroot-plugin-api</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.ow2.asm</groupId>
      <artifactId>asm</artifactId>
      <version>4.2</version>
    </dependency>
    <dependency>
      <groupId>org.ow2.asm</groupId>
      <artifactId>asm-commons</artifactId>
      <version>4.2</version>
    </dependency>
    <dependency>
      <groupId>org.ow2.asm</groupId>
      <artifactId>asm-tree</artifactId>
      <version>4.2</version>
    </dependency>
    <dependency>
      <!-- org.objectweb.asm.util.CheckClassAdapter.verify() is used when woven byte code
        verification is enabled via -Dglowroot.weaving.verify=true -->
      <groupId>org.ow2.asm</groupId>
      <artifactId>asm-util</artifactId>
      <version>4.2</version>
    </dependency>
    <dependency>
      <!-- this is an optional dependency of asm-util -->
      <groupId>org.ow2.asm</groupId>
      <artifactId>asm-analysis</artifactId>
      <version>4.2</version>
    </dependency>
    <dependency>
      <groupId>io.netty</groupId>
      <artifactId>netty</artifactId>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
    </dependency>
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-core</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-annotations</artifactId>
    </dependency>
    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <!-- 1.3.168 introduced a change where using h2's native api triggers java.sql.Driver
        to load, which finds and loads other drivers via META-INF/services/java.sql.Driver
        the problem is that this all happens during Glowroot initialization before it is ready
        for plugins (e.g. jdbc-plugin) -->
      <version>1.3.167</version>
    </dependency>
    <dependency>
      <groupId>com.ning</groupId>
      <artifactId>compress-lzf</artifactId>
      <version>1.0.0</version>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <!-- needed for compiling org.glowroot.testing.SpyingLogbackFilter and needed during shading,
        but optional as a transitive dependency of unshaded core -->
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>edu.washington.cs.types.checker</groupId>
      <artifactId>checker-quals-jdk5</artifactId>
      <!-- only annotations are used, so don't need this dependency at runtime -->
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <version>1.9.5</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <!-- this is included to test weaving against jdk 1.3 bytecode -->
      <groupId>commons-lang</groupId>
      <artifactId>commons-lang</artifactId>
      <!-- this is the latest version compiled to jdk 1.3 bytecode -->
      <version>2.6</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <!-- this is included to test weaving against JSR bytecode that ends up being inlined via
        JSRInlinerAdapter -->
      <groupId>org.apache.jackrabbit</groupId>
      <artifactId>jackrabbit-core</artifactId>
      <!-- this is the latest version compiled to jdk 5 and therefore the latest version to include
        JSR bytecode since JSR bytecode was deprecated in jdk 6 -->
      <version>2.5.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.google.caliper</groupId>
      <artifactId>caliper</artifactId>
      <version>1.0-beta-1</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <!-- this is a transitive dependency of caliper, but caliper currently depends on version 2.0
        of this library which has dependencies on asm 3.1 artifacts which have different a groupId
        from the asm 4.1 artifacts already used by glowroot, so need to pin the latest version
        (2.1) which depends on asm 4.0 which has the same groupId as asm 4.1 and therefore does not
        conflict -->
      <groupId>com.google.code.java-allocation-instrumenter</groupId>
      <artifactId>java-allocation-instrumenter</artifactId>
      <version>2.1</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <resources>
      <resource>
        <directory>${basedir}/src/main/resources</directory>
      </resource>
      <resource>
        <directory>${project.build.directory}/ui-resources-dist</directory>
      </resource>
    </resources>
    <plugins>
      <plugin>
        <!--
          com.github.trask:exec-maven-plugin:1.2.1+patch.1 includes two patches on top of
          org.codehaus.mojo:exec-maven-plugin:1.2.1
          * http://jira.codehaus.org/browse/MEXEC-118
          * http://jira.codehaus.org/browse/MEXEC-121
        -->
        <groupId>com.github.trask</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>1.2.1+patch.1-SNAPSHOT</version>
        <executions>
          <execution>
            <!-- could delete node_modules using maven-clean-plugin, but that adds unnecessary
              overhead to simple mvn clean install -->
            <id>npm-prune</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <skip>${glowroot.ui.skip}</skip>
              <executable>npm</executable>
              <arguments>
                <argument>prune</argument>
              </arguments>
            </configuration>
          </execution>
          <execution>
            <id>npm-install</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <skip>${glowroot.ui.skip}</skip>
              <executable>npm</executable>
              <!-- executableOutputCharset UTF-8 is needed when running on windows, in order to
                render a couple of special characters that npm uses when displaying the dependency
                tree structure -->
              <executableOutputCharset>UTF-8</executableOutputCharset>
              <arguments>
                <argument>install</argument>
              </arguments>
            </configuration>
          </execution>
          <execution>
            <!-- could delete app/bower_components using maven-clean-plugin, but that adds
              unnecessary overhead to simple mvn clean install -->
            <id>bower-prune</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <skip>${glowroot.ui.skip}</skip>
              <executable>bower</executable>
              <arguments>
                <argument>prune</argument>
              </arguments>
            </configuration>
          </execution>
          <execution>
            <!-- using 'bower update' instead of 'bower install' due to
              https://github.com/bower/bower/issues/939 -->
            <id>bower-update</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <skip>${glowroot.ui.skip}</skip>
              <executable>bower</executable>
              <!-- executableOutputCharset UTF-8 is needed when running on windows, in order to
                render a couple of special characters that bower uses when displaying the dependency
                tree structure -->
              <executableOutputCharset>UTF-8</executableOutputCharset>
              <arguments>
                <argument>update</argument>
              </arguments>
            </configuration>
          </execution>
          <execution>
            <id>grunt-build</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <skip>${glowroot.ui.skip}</skip>
              <executable>grunt</executable>
              <arguments>
                <argument>--no-color</argument>
                <argument>build</argument>
              </arguments>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <testExcludes>
            <testExclude>org/glowroot/trace/ThreadSafeCollectionOfTenBenchmark.java</testExclude>
          </testExcludes>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-jar-plugin</artifactId>
        <configuration>
          <archive>
            <manifestEntries>
              <Build-Time>${maven.build.timestamp}</Build-Time>
              <Main-Class>org.glowroot.Viewer</Main-Class>
              <Premain-Class>org.glowroot.MainEntryPoint</Premain-Class>
              <Can-Redefine-Classes>true</Can-Redefine-Classes>
              <Can-Retransform-Classes>true</Can-Retransform-Classes>
            </manifestEntries>
          </archive>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>active-by-default-shade</id>
      <activation>
        <property>
          <name>glowroot.shading.skip</name>
          <value>!true</value>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-shade-plugin</artifactId>
            <configuration>
              <dependencyReducedPomLocation>
                ${project.build.directory}/dependency-reduced-pom.xml
              </dependencyReducedPomLocation>
              <createSourcesJar>true</createSourcesJar>
              <shadeSourcesContent>true</shadeSourcesContent>
            </configuration>
            <executions>
              <execution>
                <id>default</id>
                <goals>
                  <goal>shade</goal>
                </goals>
                <configuration>
                  <artifactSet>
                    <excludes>
                      <!-- only annotations are used, so don't need this dependency at runtime -->
                      <exclude>edu.washington.cs.types.checker:checker-quals-jdk5</exclude>
                    </excludes>
                  </artifactSet>
                  <filters>
                    <filter>
                      <artifact>com.google.guava:guava</artifact>
                      <excludes>
                        <exclude>META-INF/beans.xml</exclude>
                      </excludes>
                    </filter>
                    <filter>
                      <artifact>com.h2database:h2</artifact>
                      <excludes>
                        <exclude>META-INF/services/java.sql.Driver</exclude>
                      </excludes>
                    </filter>
                    <filter>
                      <artifact>io.netty:netty</artifact>
                      <excludes>
                        <exclude>META-INF/jboss-beans.xml</exclude>
                        <exclude>META-INF/LICENSE.txt</exclude>
                        <exclude>META-INF/NOTICE.txt</exclude>
                        <exclude>META-INF/license/**</exclude>
                      </excludes>
                    </filter>
                    <filter>
                      <artifact>com.fasterxml.jackson.core:jackson-core</artifact>
                      <excludes>
                        <exclude>META-INF/services/com.fasterxml.jackson.core.JsonFactory</exclude>
                        <exclude>META-INF/LICENSE</exclude>
                        <exclude>META-INF/NOTICE</exclude>
                      </excludes>
                    </filter>
                    <filter>
                      <artifact>com.fasterxml.jackson.core:jackson-databind</artifact>
                      <excludes>
                        <exclude>META-INF/services/com.fasterxml.jackson.core.ObjectCodec</exclude>
                        <exclude>META-INF/LICENSE</exclude>
                        <exclude>META-INF/NOTICE</exclude>
                      </excludes>
                    </filter>
                    <filter>
                      <artifact>com.fasterxml.jackson.core:jackson-annotations</artifact>
                      <excludes>
                        <exclude>META-INF/LICENSE</exclude>
                      </excludes>
                    </filter>
                  </filters>
                  <relocations>
                    <relocation>
                      <pattern>org.objectweb.asm</pattern>
                      <shadedPattern>org.glowroot.shaded.objectweb.asm</shadedPattern>
                    </relocation>
                    <relocation>
                      <pattern>org.h2</pattern>
                      <shadedPattern>org.glowroot.shaded.h2</shadedPattern>
                    </relocation>
                    <relocation>
                      <!-- shade thread names to make it easy to identify glowroot threads -->
                      <rawString>true</rawString>
                      <pattern>H2 File Lock Watchdog</pattern>
                      <shadedPattern>Glowroot-H2 File Lock Watchdog</shadedPattern>
                    </relocation>
                    <relocation>
                      <!-- shade thread names to make it easy to identify glowroot threads -->
                      <rawString>true</rawString>
                      <pattern>H2 Log Writer</pattern>
                      <shadedPattern>Glowroot-H2 Log Writer</shadedPattern>
                    </relocation>
                    <relocation>
                      <!-- shade thread names to make it easy to identify glowroot threads -->
                      <rawString>true</rawString>
                      <pattern>Generate Seed</pattern>
                      <shadedPattern>Glowroot-H2 Generate Seed</shadedPattern>
                    </relocation>
                    <relocation>
                      <pattern>com.ning.compress</pattern>
                      <shadedPattern>org.glowroot.shaded.ning.compress</shadedPattern>
                    </relocation>
                    <relocation>
                      <pattern>com.google.common</pattern>
                      <shadedPattern>org.glowroot.shaded.google.common</shadedPattern>
                    </relocation>
                    <relocation>
                      <!-- a couple of classes in guava are under this package name -->
                      <pattern>com.google.thirdparty</pattern>
                      <shadedPattern>org.glowroot.shaded.google.thirdparty</shadedPattern>
                    </relocation>
                    <relocation>
                      <pattern>com.fasterxml.jackson</pattern>
                      <shadedPattern>org.glowroot.shaded.fasterxml.jackson</shadedPattern>
                    </relocation>
                    <relocation>
                      <pattern>org.jboss.netty</pattern>
                      <shadedPattern>org.glowroot.shaded.jboss.netty</shadedPattern>
                    </relocation>
                    <relocation>
                      <pattern>org.slf4j</pattern>
                      <shadedPattern>org.glowroot.shaded.slf4j</shadedPattern>
                    </relocation>
                    <relocation>
                      <pattern>ch.qos.logback.core</pattern>
                      <shadedPattern>org.glowroot.shaded.qos.logback.core</shadedPattern>
                    </relocation>
                    <relocation>
                      <pattern>ch.qos.logback.classic</pattern>
                      <shadedPattern>org.glowroot.shaded.qos.logback.classic</shadedPattern>
                    </relocation>
                    <relocation>
                      <!--
                        ch.qos.logback.classic.util.ContextInitializer : "logback.configurationFile"
                      -->
                      <rawString>true</rawString>
                      <pattern>^logback.configurationFile$</pattern>
                      <shadedPattern>org.glowroot.logback.configurationFile</shadedPattern>
                    </relocation>
                    <relocation>
                      <!--
                        ch.qos.logback.classic.util.ContextInitializer : "logback.groovy"
                      -->
                      <rawString>true</rawString>
                      <pattern>^logback.groovy$</pattern>
                      <shadedPattern>org.glowroot.logback.groovy</shadedPattern>
                    </relocation>
                    <relocation>
                      <!--
                        ch.qos.logback.classic.util.ContextInitializer : "logback.xml"
                        ch.qos.logback.classic.util.ContextInitializer : "logback-test.xml"
                      -->
                      <rawString>true</rawString>
                      <pattern>^logback(-test)?.xml$</pattern>
                      <shadedPattern>org.glowroot.logback$1.xml</shadedPattern>
                    </relocation>
                    <relocation>
                      <!--
                        ch.qos.logback.classic.ClassicConstants : "logback.ContextSelector"
                      -->
                      <rawString>true</rawString>
                      <pattern>^logback.ContextSelector$</pattern>
                      <shadedPattern>org.glowroot.logback.ContextSelector</shadedPattern>
                    </relocation>
                    <relocation>
                      <!--
                        ch.qos.logback.classic.ClassicConstants :
                        "java:comp/env/logback/configuration-resource"
                      -->
                      <rawString>true</rawString>
                      <pattern>^java:comp/env/logback/configuration-resource$</pattern>
                      <shadedPattern>
                        java:comp/env/org.glowroot.logback/configuration-resource
                      </shadedPattern>
                    </relocation>
                    <relocation>
                      <!--
                        ch.qos.logback.classic.ClassicConstants :
                        "java:comp/env/logback/context-name"
                      -->
                      <rawString>true</rawString>
                      <pattern>^java:comp/env/logback/context-name$</pattern>
                      <shadedPattern>java:comp/env/org.glowroot.logback/context-name</shadedPattern>
                    </relocation>
                  </relocations>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>com.github.wvengen</groupId>
            <artifactId>proguard-maven-plugin</artifactId>
            <version>2.0.6</version>
            <executions>
              <execution>
                <phase>package</phase>
                <goals>
                  <goal>proguard</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <includeDependency>false</includeDependency>
              <obfuscate>false</obfuscate>
              <libs>
                <!-- see auto-activated-mac and auto-activated-not-mac profiles below for
                  ${rt.jar.path} definition -->
                <lib>${rt.jar.path}</lib>
              </libs>
              <options>
                <option>-dontoptimize</option>
                <option>-dontnote **</option>
                <option>-dontwarn **</option>
                <option>-keep class org.glowroot.* { *; }</option>
                <option>-keep class org.glowroot.api.** { *; }</option>
                <option>-keep class org.glowroot.collector.** { *; }</option>
                <option>-keep class org.glowroot.common.** { *; }</option>
                <option>-keep class org.glowroot.config.** { *; }</option>
                <option>-keep class org.glowroot.dynamicadvice.** { *; }</option>
                <option>-keep class org.glowroot.jvm.** { *; }</option>
                <option>-keep class org.glowroot.local.** { *; }</option>
                <!-- keep marker annotations so they can be used to doc tests also -->
                <option>-keep class org.glowroot.markers.** { *; }</option>
                <option>-keep class org.glowroot.trace.** { *; }</option>
                <option>-keep class org.glowroot.weaving.** { *; }</option>
                <!-- keep all guava classes so that plugins can use them -->
                <option>-keep class org.glowroot.shaded.google.common.** { *; }</option>
                <!-- keep all logback appenders -->
                <option>
                  -keep class * extends org.glowroot.shaded.qos.logback.core.Appender { *; }
                </option>
                <!-- keep special enumeration methods (see "Processing enumeration classes" section
                  at http://proguard.sourceforge.net/manual/examples.html) -->
                <option>
                  -keepclassmembers enum * { public static **[] values(); public static **
                  valueOf(java.lang.String); }
                </option>
                <!-- if the FilterAttachable<E> interface is not kept, then the interface is
                  stripped from org.glowroot.shaded.qos.logback.core.Appender<E>, and proguard then
                  strips the generic parameter type from Appender, but proguard (at least as of
                  version 4.10) leaves behind the generic parameter on the doAppend(E paramE)
                  method, which leads to a MalformedParameterizedTypeException on JDK 7 (maybe due
                  to more strict validation in JDK 7) -->
                <option>
                  -keep class org.glowroot.shaded.qos.logback.core.spi.FilterAttachable { *; }
                </option>
              </options>
            </configuration>
            <dependencies>
              <dependency>
                <groupId>net.sf.proguard</groupId>
                <artifactId>proguard-base</artifactId>
                <version>4.10</version>
              </dependency>
            </dependencies>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>auto-activated-not-mac</id>
      <activation>
        <os>
          <family>!mac</family>
        </os>
      </activation>
      <properties>
        <rt.jar.path>${java.home}/lib/rt.jar</rt.jar.path>
      </properties>
    </profile>
    <profile>
      <id>auto-activated-mac</id>
      <activation>
        <os>
          <family>mac</family>
        </os>
      </activation>
      <properties>
        <rt.jar.path>${java.home}/../Classes/classes.jar</rt.jar.path>
      </properties>
    </profile>
  </profiles>
</project>
